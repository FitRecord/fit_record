def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystorePassword = rootProject.hasProperty('keyPassword')? rootProject.property('keyPassword'): ''
def ndkVersionNumber = rootProject.hasProperty('ndkVersion')? rootProject.property('ndkVersion'): '21.0.0'

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 29
    ndkVersion ndkVersionNumber

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "org.fitrecord.android"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            keyAlias 'key'
            keyPassword keystorePassword
            storePassword keystorePassword
            storeFile file('../play_store_sign.jks')
        }
    }

    buildTypes {
        debug {
            buildConfigField("String", "EXPORT_AUTHORITY", "\"org.fitrecord.android.export.debug\"")
            manifestPlaceholders = [exportAuthorities:"org.fitrecord.android.export.debug"]
            buildConfigField("String", "STRAVA_CLIENT_ID", "\"${localProperties.getProperty("strava.client_id")}\"")
            buildConfigField("String", "STRAVA_CLIENT_SECRET", "\"${localProperties.getProperty("strava.client_secret")}\"")
            buildConfigField("String", "DROPBOX_CLIENT_ID", "\"${localProperties.getProperty("dropbox.client_id")}\"")
            buildConfigField("String", "DROPBOX_CLIENT_SECRET", "\"${localProperties.getProperty("dropbox.client_secret")}\"")
        }
        release {
            applicationIdSuffix ".release"
            signingConfig signingConfigs.release
            buildConfigField("String", "EXPORT_AUTHORITY", "\"org.fitrecord.android.export\"")
            manifestPlaceholders = [exportAuthorities:"org.fitrecord.android.export"]
            buildConfigField("String", "STRAVA_CLIENT_ID", "\"${rootProject.getProperty("strava_client_id")}\"")
            buildConfigField("String", "STRAVA_CLIENT_SECRET", "\"${rootProject.getProperty("strava_client_secret")}\"")
            buildConfigField("String", "DROPBOX_CLIENT_ID", "\"${rootProject.getProperty("dropbox_client_id")}\"")
            buildConfigField("String", "DROPBOX_CLIENT_SECRET", "\"${rootProject.getProperty("dropbox_client_secret")}\"")
        }
    }
    buildToolsVersion '29.0.3'
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
